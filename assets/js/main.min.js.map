{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/browserify/node_modules/process/browser.js","main.min.js","node_modules/vue-resource/src/http/before.js","node_modules/vue-resource/src/http/client/index.js","node_modules/vue-resource/src/http/client/jsonp.js","node_modules/vue-resource/src/http/client/xdr.js","node_modules/vue-resource/src/http/client/xhr.js","node_modules/vue-resource/src/http/cors.js","node_modules/vue-resource/src/http/header.js","node_modules/vue-resource/src/http/index.js","node_modules/vue-resource/src/http/interceptor.js","node_modules/vue-resource/src/http/jsonp.js","node_modules/vue-resource/src/http/method.js","node_modules/vue-resource/src/http/mime.js","node_modules/vue-resource/src/http/timeout.js","node_modules/vue-resource/src/index.js","node_modules/vue-resource/src/lib/promise.js","node_modules/vue-resource/src/lib/url-template.js","node_modules/vue-resource/src/promise.js","node_modules/vue-resource/src/resource.js","node_modules/vue-resource/src/url/index.js","node_modules/vue-resource/src/url/legacy.js","node_modules/vue-resource/src/url/query.js","node_modules/vue-resource/src/url/root.js","node_modules/vue-resource/src/url/template.js","node_modules/vue-resource/src/util.js","node_modules/vue/dist/vue.common.js","src/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","this","noop","process","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",2,"_","request","isFunction","beforeSend","../util",3,"parseHeaders","str","value","headers","isString","each","split","row","indexOf","trim","toLower","slice","isArray","Promise","xhrClient","response","client","resolve","then","ok","status","../../promise","../../util","./xhr",4,"handler","script","callback","Math","random","toString","substr","data","params","jsonp","cancel","type","document","createElement","src","url","async","window","event","body","removeChild","onload","onerror","appendChild",5,"xdr","XDomainRequest","abort","open","method","responseText","statusText","onabort","ontimeout","onprogress","send",6,"xhr","XMLHttpRequest","getAllResponseHeaders","isPlainObject","extend","upload","header","setRequestHeader",7,"crossOrigin","requestUrl","parse","protocol","originUrl","host","xdrClient","xhrCors","location","href","emulateHTTP","./client/xdr",8,"toUpperCase","http","common","custom","toLowerCase","test",9,"Http","options","promise","Client","interceptors","forEach","interceptor","$vm","isObject","merge","$options","bind","reject","error","success","jsonType","Content-Type","emulateJSON","put","post","patch","delete","Accept","X-Requested-With","undefined","../promise","./before","./client","./cors","./header","./interceptor","./jsonp","./method","./mime","./timeout",10,"when","fulfilled","rejected","vm",11,"jsonpClient","./client/jsonp",12,13,"JSON","stringify",14,15,"install","Vue","config","warning","util","warn","resource","Object","defineProperties","$url","get","$http","$resource","$promise","executor","use","./http","./promise","./resource","./url","./util",16,"state","PENDING","deferred","x","RESOLVED","REJECTED","all","iterable","resolver","result","count","race","p","TypeError","called","notify","reason","shift","onResolved","onRejected",17,"expand","variables","tmpl","expanded","vars","template","operators","context","replace","expression","literal","operator","values","charAt","variable","tmp","exec","getValues","separator","join","encodeReserved","key","modifier","isDefined","substring","parseInt","encodeValue","isKeyOperator","filter","keys","k","encodeURIComponent","map","part","encodeURI",18,"PromiseObj","always","cb","./lib/promise",19,"Resource","actions","self","action","opts","save","query","update","remove",20,"Url","transform","transforms","factory","next","serialize","obj","scope","hash","plain","add","ie","documentMode","el","root","escape","port","hostname","pathname","search","./legacy","./query","./root","./template",21,"encodeUriSegment","encodeUriQuery","spaces","match","slash",22,"urlParams",23,24,"UrlTemplate","../lib/url-template",25,"target","source","deep","console","msg","silent","debug","val","getPrototypeOf","fn","iterator","hasOwnProperty","defaults","arg",26,"global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","c","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","b","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","ctx","toArray","list","start","ret","to","from","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timestamp","later","last","Date","now","arr","cancellable","cancelled","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","filters","reservedArgRE","dynamic","stripped","parseDirective","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","escapeRegex","regexEscapeRE","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","selector","querySelector","NODE_ENV","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","useCapture","addEventListener","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","id","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","assertAsset","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","formatSubPath","path","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","watcher","_maxUpdateCount","splice","pushWatcher","user","q","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","setObjectClasses","stringToObject","callActivateHooks","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","Boolean","coerceProp","getPropDefaultValue","assertProp","expectedType","valid","String","formatType","formatValue","validator","coerce","pushJob","job","queue$1","flush","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","m","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawValue","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","delimiter","convertArray","item","reduce","$value","$key","orderBy","sortKey","reverse","order","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","mixin","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","entry","newer","older","returnEntry","freeze","warnExpressionErrors","_delimitersChanged","_propBindingModes","hasConsole","stack","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","paramAttributes","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","isSimple","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","_process",27,"projects","contributors","fetchProjects","fetchContributors","vue","vue-resource"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],2:[function(require,module,exports){\n/**\n * Before Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (_.isFunction(request.beforeSend)) {\n            request.beforeSend.call(this, request);\n        }\n\n        return request;\n    }\n\n};\n\n},{\"../util\":25}],3:[function(require,module,exports){\n/**\n * Base client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\nvar xhrClient = require('./xhr');\n\nmodule.exports = function (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[_.toLower(name)];\n                }\n\n                return headers;\n            };\n\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n\n};\n\nfunction parseHeaders(str) {\n\n    var headers = {}, value, name, i;\n\n    if (_.isString(str)) {\n        _.each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = _.trim(_.toLower(row.slice(0, i)));\n            value = _.trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (_.isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n\n            } else {\n\n                headers[name] = value;\n            }\n\n        });\n    }\n\n    return headers;\n}\n\n},{\"../../promise\":18,\"../../util\":25,\"./xhr\":6}],4:[function(require,module,exports){\n/**\n * JSONP client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({type: 'cancel'});\n        };\n\n        script = document.createElement('script');\n        script.src = _.url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function (event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n},{\"../../promise\":18,\"../../util\":25}],5:[function(require,module,exports){\n/**\n * XDomain client (Internet Explorer).\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText;\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n};\n\n},{\"../../promise\":18,\"../../util\":25}],6:[function(require,module,exports){\n/**\n * XMLHttp client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xhr.responseText;\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (_.isPlainObject(request.xhr)) {\n            _.extend(xhr, request.xhr);\n        }\n\n        if (_.isPlainObject(request.upload)) {\n            _.extend(xhr.upload, request.upload);\n        }\n\n        _.each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n};\n\n},{\"../../promise\":18,\"../../util\":25}],7:[function(require,module,exports){\n/**\n * CORS Interceptor.\n */\n\nvar _ = require('../util');\nvar xdrClient = require('./client/xdr');\nvar xhrCors = 'withCredentials' in new XMLHttpRequest();\nvar originUrl = _.url.parse(location.href);\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.crossOrigin === null) {\n            request.crossOrigin = crossOrigin(request);\n        }\n\n        if (request.crossOrigin) {\n\n            if (!xhrCors) {\n                request.client = xdrClient;\n            }\n\n            request.emulateHTTP = false;\n        }\n\n        return request;\n    }\n\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = _.url.parse(_.url(request));\n\n    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n}\n\n},{\"../util\":25,\"./client/xdr\":5}],8:[function(require,module,exports){\n/**\n * Header Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        request.method = request.method.toUpperCase();\n        request.headers = _.extend({}, _.http.headers.common,\n            !request.crossOrigin ? _.http.headers.custom : {},\n            _.http.headers[request.method.toLowerCase()],\n            request.headers\n        );\n\n        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n            _.extend(request.params, request.data);\n            delete request.data;\n        }\n\n        return request;\n    }\n\n};\n\n},{\"../util\":25}],9:[function(require,module,exports){\n/**\n * Service for sending network requests.\n */\n\nvar _ = require('../util');\nvar Client = require('./client');\nvar Promise = require('../promise');\nvar interceptor = require('./interceptor');\nvar jsonType = {'Content-Type': 'application/json'};\n\nfunction Http(url, options) {\n\n    var client = Client, request, promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, this.$vm)(client);\n    }, this);\n\n    options = _.isObject(url) ? url : _.extend({url: url}, options);\n    request = _.merge({}, Http.options, this.$options, options);\n    promise = client(request).bind(this.$vm).then(function (response) {\n\n        return response.ok ? response : Promise.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            _.error(response);\n        }\n\n        return Promise.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.interceptors = [\n    require('./before'),\n    require('./timeout'),\n    require('./jsonp'),\n    require('./method'),\n    require('./mime'),\n    require('./header'),\n    require('./cors')\n];\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: {'Accept': 'application/json, text/plain, */*'},\n    custom: {'X-Requested-With': 'XMLHttpRequest'}\n};\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (_.isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (_.isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, _.extend({method: method, data: data, success: success}, options));\n    };\n});\n\nmodule.exports = _.http = Http;\n\n},{\"../promise\":18,\"../util\":25,\"./before\":2,\"./client\":3,\"./cors\":7,\"./header\":8,\"./interceptor\":10,\"./jsonp\":11,\"./method\":12,\"./mime\":13,\"./timeout\":14}],10:[function(require,module,exports){\n/**\n * Interceptor factory.\n */\n\nvar _ = require('../util');\nvar Promise = require('../promise');\n\nmodule.exports = function (handler, vm) {\n\n    return function (client) {\n\n        if (_.isFunction(handler)) {\n            handler = handler.call(vm, Promise);\n        }\n\n        return function (request) {\n\n            if (_.isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (_.isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n};\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\n},{\"../promise\":18,\"../util\":25}],11:[function(require,module,exports){\n/**\n * JSONP Interceptor.\n */\n\nvar jsonpClient = require('./client/jsonp');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.method == 'JSONP') {\n            request.client = jsonpClient;\n        }\n\n        return request;\n    }\n\n};\n\n},{\"./client/jsonp\":4}],12:[function(require,module,exports){\n/**\n * HTTP method override Interceptor.\n */\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n            request.headers['X-HTTP-Method-Override'] = request.method;\n            request.method = 'POST';\n        }\n\n        return request;\n    }\n\n};\n\n},{}],13:[function(require,module,exports){\n/**\n * Mime Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateJSON && _.isPlainObject(request.data)) {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            request.data = _.url.params(request.data);\n        }\n\n        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n            delete request.headers['Content-Type'];\n        }\n\n        if (_.isPlainObject(request.data)) {\n            request.data = JSON.stringify(request.data);\n        }\n\n        return request;\n    },\n\n    response: function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n\n        return response;\n    }\n\n};\n\n},{\"../util\":25}],14:[function(require,module,exports){\n/**\n * Timeout Interceptor.\n */\n\nmodule.exports = function () {\n\n    var timeout;\n\n    return {\n\n        request: function (request) {\n\n            if (request.timeout) {\n                timeout = setTimeout(function () {\n                    request.cancel();\n                }, request.timeout);\n            }\n\n            return request;\n        },\n\n        response: function (response) {\n\n            clearTimeout(timeout);\n\n            return response;\n        }\n\n    };\n};\n\n},{}],15:[function(require,module,exports){\n/**\n * Install plugin.\n */\n\nfunction install(Vue) {\n\n    var _ = require('./util');\n\n    _.config = Vue.config;\n    _.warning = Vue.util.warn;\n    _.nextTick = Vue.util.nextTick;\n\n    Vue.url = require('./url');\n    Vue.http = require('./http');\n    Vue.resource = require('./resource');\n    Vue.Promise = require('./promise');\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return _.options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return _.options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                return function (executor) {\n                    return new Vue.Promise(executor, this);\n                }.bind(this);\n            }\n        }\n\n    });\n}\n\nif (window.Vue) {\n    Vue.use(install);\n}\n\nmodule.exports = install;\n\n},{\"./http\":9,\"./promise\":18,\"./resource\":19,\"./url\":20,\"./util\":25}],16:[function(require,module,exports){\n/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar _ = require('../util');\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise.reject = function (r) {\n    return new Promise(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise.resolve = function (x) {\n    return new Promise(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise.all = function all(iterable) {\n    return new Promise(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise.race = function race(iterable) {\n    return new Promise(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var promise = this;\n\n    _.nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nmodule.exports = Promise;\n\n},{\"../util\":25}],17:[function(require,module,exports){\n/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nexports.expand = function (url, params, variables) {\n\n    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n};\n\nexports.parse = function (template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return exports.encodeReserved(literal);\n                }\n            });\n        }\n    };\n};\n\nexports.getValues = function (context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (this.isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            result.push(this.encodeValue(operator, value[k], k));\n                        }\n                    }, this);\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        tmp.push(this.encodeValue(operator, value));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(this.encodeValue(operator, value[k].toString()));\n                        }\n                    }, this);\n                }\n\n                if (this.isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n};\n\nexports.isDefined = function (value) {\n    return value !== undefined && value !== null;\n};\n\nexports.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n};\n\nexports.encodeValue = function (operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n};\n\nexports.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n};\n\n},{}],18:[function(require,module,exports){\n/**\n * Promise adapter.\n */\n\nvar _ = require('./util');\nvar PromiseObj = window.Promise || require('./lib/promise');\n\nfunction Promise(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise.all = function (iterable, context) {\n    return new Promise(PromiseObj.all(iterable), context);\n};\n\nPromise.resolve = function (value, context) {\n    return new Promise(PromiseObj.resolve(value), context);\n};\n\nPromise.reject = function (reason, context) {\n    return new Promise(PromiseObj.reject(reason), context);\n};\n\nPromise.race = function (iterable, context) {\n    return new Promise(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return PromiseObj.reject(reason);\n        }\n    );\n};\n\np.success = function (callback) {\n\n    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nmodule.exports = Promise;\n\n},{\"./lib/promise\":16,\"./util\":25}],19:[function(require,module,exports){\n/**\n * Service for interacting with RESTful services.\n */\n\nvar _ = require('./util');\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this, resource = {};\n\n    actions = _.extend({},\n        Resource.actions,\n        actions\n    );\n\n    _.each(actions, function (action, name) {\n\n        action = _.merge({url: url, params: params || {}}, options, action);\n\n        resource[name] = function () {\n            return (self.$http || _.http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = _.extend({}, action), params = {}, data, success, error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (_.isFunction(args[1])) {\n\n                if (_.isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (_.isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = _.extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\nmodule.exports = _.resource = Resource;\n\n},{\"./util\":25}],20:[function(require,module,exports){\n/**\n * Service for URL templating.\n */\n\nvar _ = require('../util');\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var options = url, transform;\n\n    if (_.isString(url)) {\n        options = {url: url, params: params};\n    }\n\n    options = _.merge({}, Url.options, this.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, this.$vm);\n    }, this);\n\n    return transform(options);\n};\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [\n    require('./template'),\n    require('./legacy'),\n    require('./query'),\n    require('./root')\n];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (_.isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\n    _.each(obj, function (value, key) {\n\n        hash = _.isObject(value) || _.isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nmodule.exports = _.url = Url;\n\n},{\"../util\":25,\"./legacy\":21,\"./query\":22,\"./root\":23,\"./template\":24}],21:[function(require,module,exports){\n/**\n * Legacy Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var variables = [], url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (spaces ? '%20' : '+'));\n}\n\n},{\"../util\":25}],22:[function(require,module,exports){\n/**\n * Query Parameter Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\n   _.each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = _.url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n},{\"../util\":25}],23:[function(require,module,exports){\n/**\n * Root Prefix Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var url = next(options);\n\n    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n};\n\n},{\"../util\":25}],24:[function(require,module,exports){\n/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar UrlTemplate = require('../lib/url-template');\n\nmodule.exports = function (options) {\n\n    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n},{\"../lib/url-template\":17}],25:[function(require,module,exports){\n/**\n * Utility functions.\n */\n\nvar _ = exports, array = [], console = window.console;\n\n_.warn = function (msg) {\n    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n};\n\n_.error = function (msg) {\n    if (console) {\n        console.error(msg);\n    }\n};\n\n_.trim = function (str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n};\n\n_.toLower = function (str) {\n    return str ? str.toLowerCase() : '';\n};\n\n_.isArray = Array.isArray;\n\n_.isString = function (val) {\n    return typeof val === 'string';\n};\n\n_.isFunction = function (val) {\n    return typeof val === 'function';\n};\n\n_.isObject = function (obj) {\n    return obj !== null && typeof obj === 'object';\n};\n\n_.isPlainObject = function (obj) {\n    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n};\n\n_.options = function (fn, obj, options) {\n\n    options = options || {};\n\n    if (_.isFunction(options)) {\n        options = options.call(obj);\n    }\n\n    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n};\n\n_.each = function (obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (_.isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n};\n\n_.defaults = function (target, source) {\n\n    for (var key in source) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n};\n\n_.extend = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg);\n    });\n\n    return target;\n};\n\n_.merge = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg, true);\n    });\n\n    return target;\n};\n\nfunction merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n                target[key] = [];\n            }\n            merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n},{}],26:[function(require,module,exports){\n(function (process,global){\n/*!\n * Vue.js v1.0.20\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (!key) continue;\n        if (isPlainObject(key)) {\n          var keys = Object.keys(key);\n          for (var k = 0; k < keys.length; k++) {\n            removeClass(this.el, keys[k]);\n          }\n        } else {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (obj[key]) {\n      addClass(el, key);\n    }\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop.options);\n  }\n  if (assertProp(prop, value)) {\n    defineReactive(vm, key, value);\n  }\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n    var isSimple = isSimplePath(parentKey);\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        if (isSimple) {\n          withoutConversion(function () {\n            child[childKey] = val;\n          });\n        } else {\n          child[childKey] = val;\n        }\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    var value = parentWatcher.value;\n    if (isSimple && value !== undefined) {\n      withoutConversion(function () {\n        initProp(child, prop, value);\n      });\n    } else {\n      initProp(child, prop, value);\n    }\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.');\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.');\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(factory, 'component', value);\n      }\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.20';\n\n// devtools global hook\n/* istanbul ignore next */\nif (config.devtools) {\n  if (devtools) {\n    devtools.emit('init', Vue);\n  } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"_process\":1}],27:[function(require,module,exports){\nvar Vue = require('vue');\nVue.use(require('vue-resource'));\n\n(function(){\n\tnew Vue({\n\t\tel: '.app',\n\t\tdata: {\n\t\t\tprojects: [],\n\t\t\tcontributors: []\n\t\t},\n\t\tready: function () {\n\t\t\tthis.fetchProjects();\n            this.fetchContributors();\n\t\t},\n\t\tmethods: {\n\t\t\tfetchProjects: function() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: 'artesaos-packages.json',\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t}).then(function(response){\n\t\t\t\t\tthis.projects = response.data;\n\t\t\t\t});\n\t\t\t},\n            fetchContributors: function() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: 'https://api.github.com/orgs/artesaos/members',\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t}).then(function(response){\n\t\t\t\t\tthis.contributors = response.data;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n})(Vue);\n\n},{\"vue\":26,\"vue-resource\":15}]},{},[27])\n\n","/**\n * Before Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (_.isFunction(request.beforeSend)) {\n            request.beforeSend.call(this, request);\n        }\n\n        return request;\n    }\n\n};\n","/**\n * Base client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\nvar xhrClient = require('./xhr');\n\nmodule.exports = function (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[_.toLower(name)];\n                }\n\n                return headers;\n            };\n\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n\n};\n\nfunction parseHeaders(str) {\n\n    var headers = {}, value, name, i;\n\n    if (_.isString(str)) {\n        _.each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = _.trim(_.toLower(row.slice(0, i)));\n            value = _.trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (_.isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n\n            } else {\n\n                headers[name] = value;\n            }\n\n        });\n    }\n\n    return headers;\n}\n","/**\n * JSONP client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({type: 'cancel'});\n        };\n\n        script = document.createElement('script');\n        script.src = _.url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function (event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n","/**\n * XDomain client (Internet Explorer).\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText;\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n};\n","/**\n * XMLHttp client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xhr.responseText;\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (_.isPlainObject(request.xhr)) {\n            _.extend(xhr, request.xhr);\n        }\n\n        if (_.isPlainObject(request.upload)) {\n            _.extend(xhr.upload, request.upload);\n        }\n\n        _.each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n};\n","/**\n * CORS Interceptor.\n */\n\nvar _ = require('../util');\nvar xdrClient = require('./client/xdr');\nvar xhrCors = 'withCredentials' in new XMLHttpRequest();\nvar originUrl = _.url.parse(location.href);\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.crossOrigin === null) {\n            request.crossOrigin = crossOrigin(request);\n        }\n\n        if (request.crossOrigin) {\n\n            if (!xhrCors) {\n                request.client = xdrClient;\n            }\n\n            request.emulateHTTP = false;\n        }\n\n        return request;\n    }\n\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = _.url.parse(_.url(request));\n\n    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n}\n","/**\n * Header Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        request.method = request.method.toUpperCase();\n        request.headers = _.extend({}, _.http.headers.common,\n            !request.crossOrigin ? _.http.headers.custom : {},\n            _.http.headers[request.method.toLowerCase()],\n            request.headers\n        );\n\n        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n            _.extend(request.params, request.data);\n            delete request.data;\n        }\n\n        return request;\n    }\n\n};\n","/**\n * Service for sending network requests.\n */\n\nvar _ = require('../util');\nvar Client = require('./client');\nvar Promise = require('../promise');\nvar interceptor = require('./interceptor');\nvar jsonType = {'Content-Type': 'application/json'};\n\nfunction Http(url, options) {\n\n    var client = Client, request, promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, this.$vm)(client);\n    }, this);\n\n    options = _.isObject(url) ? url : _.extend({url: url}, options);\n    request = _.merge({}, Http.options, this.$options, options);\n    promise = client(request).bind(this.$vm).then(function (response) {\n\n        return response.ok ? response : Promise.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            _.error(response);\n        }\n\n        return Promise.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.interceptors = [\n    require('./before'),\n    require('./timeout'),\n    require('./jsonp'),\n    require('./method'),\n    require('./mime'),\n    require('./header'),\n    require('./cors')\n];\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: {'Accept': 'application/json, text/plain, */*'},\n    custom: {'X-Requested-With': 'XMLHttpRequest'}\n};\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (_.isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (_.isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, _.extend({method: method, data: data, success: success}, options));\n    };\n});\n\nmodule.exports = _.http = Http;\n","/**\n * Interceptor factory.\n */\n\nvar _ = require('../util');\nvar Promise = require('../promise');\n\nmodule.exports = function (handler, vm) {\n\n    return function (client) {\n\n        if (_.isFunction(handler)) {\n            handler = handler.call(vm, Promise);\n        }\n\n        return function (request) {\n\n            if (_.isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (_.isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n};\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n","/**\n * JSONP Interceptor.\n */\n\nvar jsonpClient = require('./client/jsonp');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.method == 'JSONP') {\n            request.client = jsonpClient;\n        }\n\n        return request;\n    }\n\n};\n","/**\n * HTTP method override Interceptor.\n */\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n            request.headers['X-HTTP-Method-Override'] = request.method;\n            request.method = 'POST';\n        }\n\n        return request;\n    }\n\n};\n","/**\n * Mime Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateJSON && _.isPlainObject(request.data)) {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            request.data = _.url.params(request.data);\n        }\n\n        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n            delete request.headers['Content-Type'];\n        }\n\n        if (_.isPlainObject(request.data)) {\n            request.data = JSON.stringify(request.data);\n        }\n\n        return request;\n    },\n\n    response: function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n\n        return response;\n    }\n\n};\n","/**\n * Timeout Interceptor.\n */\n\nmodule.exports = function () {\n\n    var timeout;\n\n    return {\n\n        request: function (request) {\n\n            if (request.timeout) {\n                timeout = setTimeout(function () {\n                    request.cancel();\n                }, request.timeout);\n            }\n\n            return request;\n        },\n\n        response: function (response) {\n\n            clearTimeout(timeout);\n\n            return response;\n        }\n\n    };\n};\n","/**\n * Install plugin.\n */\n\nfunction install(Vue) {\n\n    var _ = require('./util');\n\n    _.config = Vue.config;\n    _.warning = Vue.util.warn;\n    _.nextTick = Vue.util.nextTick;\n\n    Vue.url = require('./url');\n    Vue.http = require('./http');\n    Vue.resource = require('./resource');\n    Vue.Promise = require('./promise');\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return _.options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return _.options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                return function (executor) {\n                    return new Vue.Promise(executor, this);\n                }.bind(this);\n            }\n        }\n\n    });\n}\n\nif (window.Vue) {\n    Vue.use(install);\n}\n\nmodule.exports = install;\n","/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar _ = require('../util');\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise.reject = function (r) {\n    return new Promise(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise.resolve = function (x) {\n    return new Promise(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise.all = function all(iterable) {\n    return new Promise(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise.race = function race(iterable) {\n    return new Promise(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var promise = this;\n\n    _.nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nmodule.exports = Promise;\n","/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nexports.expand = function (url, params, variables) {\n\n    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n};\n\nexports.parse = function (template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return exports.encodeReserved(literal);\n                }\n            });\n        }\n    };\n};\n\nexports.getValues = function (context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (this.isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            result.push(this.encodeValue(operator, value[k], k));\n                        }\n                    }, this);\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        tmp.push(this.encodeValue(operator, value));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(this.encodeValue(operator, value[k].toString()));\n                        }\n                    }, this);\n                }\n\n                if (this.isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n};\n\nexports.isDefined = function (value) {\n    return value !== undefined && value !== null;\n};\n\nexports.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n};\n\nexports.encodeValue = function (operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n};\n\nexports.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n};\n","/**\n * Promise adapter.\n */\n\nvar _ = require('./util');\nvar PromiseObj = window.Promise || require('./lib/promise');\n\nfunction Promise(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise.all = function (iterable, context) {\n    return new Promise(PromiseObj.all(iterable), context);\n};\n\nPromise.resolve = function (value, context) {\n    return new Promise(PromiseObj.resolve(value), context);\n};\n\nPromise.reject = function (reason, context) {\n    return new Promise(PromiseObj.reject(reason), context);\n};\n\nPromise.race = function (iterable, context) {\n    return new Promise(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return PromiseObj.reject(reason);\n        }\n    );\n};\n\np.success = function (callback) {\n\n    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nmodule.exports = Promise;\n","/**\n * Service for interacting with RESTful services.\n */\n\nvar _ = require('./util');\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this, resource = {};\n\n    actions = _.extend({},\n        Resource.actions,\n        actions\n    );\n\n    _.each(actions, function (action, name) {\n\n        action = _.merge({url: url, params: params || {}}, options, action);\n\n        resource[name] = function () {\n            return (self.$http || _.http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = _.extend({}, action), params = {}, data, success, error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (_.isFunction(args[1])) {\n\n                if (_.isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (_.isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = _.extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\nmodule.exports = _.resource = Resource;\n","/**\n * Service for URL templating.\n */\n\nvar _ = require('../util');\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var options = url, transform;\n\n    if (_.isString(url)) {\n        options = {url: url, params: params};\n    }\n\n    options = _.merge({}, Url.options, this.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, this.$vm);\n    }, this);\n\n    return transform(options);\n};\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [\n    require('./template'),\n    require('./legacy'),\n    require('./query'),\n    require('./root')\n];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (_.isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\n    _.each(obj, function (value, key) {\n\n        hash = _.isObject(value) || _.isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nmodule.exports = _.url = Url;\n","/**\n * Legacy Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var variables = [], url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (spaces ? '%20' : '+'));\n}\n","/**\n * Query Parameter Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\n   _.each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = _.url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n","/**\n * Root Prefix Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var url = next(options);\n\n    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n};\n","/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar UrlTemplate = require('../lib/url-template');\n\nmodule.exports = function (options) {\n\n    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n","/**\n * Utility functions.\n */\n\nvar _ = exports, array = [], console = window.console;\n\n_.warn = function (msg) {\n    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n};\n\n_.error = function (msg) {\n    if (console) {\n        console.error(msg);\n    }\n};\n\n_.trim = function (str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n};\n\n_.toLower = function (str) {\n    return str ? str.toLowerCase() : '';\n};\n\n_.isArray = Array.isArray;\n\n_.isString = function (val) {\n    return typeof val === 'string';\n};\n\n_.isFunction = function (val) {\n    return typeof val === 'function';\n};\n\n_.isObject = function (obj) {\n    return obj !== null && typeof obj === 'object';\n};\n\n_.isPlainObject = function (obj) {\n    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n};\n\n_.options = function (fn, obj, options) {\n\n    options = options || {};\n\n    if (_.isFunction(options)) {\n        options = options.call(obj);\n    }\n\n    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n};\n\n_.each = function (obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (_.isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n};\n\n_.defaults = function (target, source) {\n\n    for (var key in source) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n};\n\n_.extend = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg);\n    });\n\n    return target;\n};\n\n_.merge = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg, true);\n    });\n\n    return target;\n};\n\nfunction merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n                target[key] = [];\n            }\n            merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n","/*!\n * Vue.js v1.0.20\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (!key) continue;\n        if (isPlainObject(key)) {\n          var keys = Object.keys(key);\n          for (var k = 0; k < keys.length; k++) {\n            removeClass(this.el, keys[k]);\n          }\n        } else {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (obj[key]) {\n      addClass(el, key);\n    }\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop.options);\n  }\n  if (assertProp(prop, value)) {\n    defineReactive(vm, key, value);\n  }\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n    var isSimple = isSimplePath(parentKey);\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        if (isSimple) {\n          withoutConversion(function () {\n            child[childKey] = val;\n          });\n        } else {\n          child[childKey] = val;\n        }\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    var value = parentWatcher.value;\n    if (isSimple && value !== undefined) {\n      withoutConversion(function () {\n        initProp(child, prop, value);\n      });\n    } else {\n      initProp(child, prop, value);\n    }\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.');\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.');\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(factory, 'component', value);\n      }\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.20';\n\n// devtools global hook\n/* istanbul ignore next */\nif (config.devtools) {\n  if (devtools) {\n    devtools.emit('init', Vue);\n  } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;","var Vue = require('vue');\nVue.use(require('vue-resource'));\n\n(function(){\n\tnew Vue({\n\t\tel: '.app',\n\t\tdata: {\n\t\t\tprojects: [],\n\t\t\tcontributors: []\n\t\t},\n\t\tready: function () {\n\t\t\tthis.fetchProjects();\n            this.fetchContributors();\n\t\t},\n\t\tmethods: {\n\t\t\tfetchProjects: function() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: 'artesaos-packages.json',\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t}).then(function(response){\n\t\t\t\t\tthis.projects = response.data;\n\t\t\t\t});\n\t\t\t},\n            fetchContributors: function() {\n\t\t\t\tthis.$http({\n\t\t\t\t\turl: 'https://api.github.com/orgs/artesaos/members',\n\t\t\t\t\tmethod: 'GET'\n\t\t\t\t}).then(function(response){\n\t\t\t\t\tthis.contributors = response.data;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\n})(Vue);\n"],"sourceRoot":"/source/"}